{"version":3,"file":"static/js/12.e3ebe2c9.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/Posts/Posts.module.css?138f","components/Profile/Posts/Post.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/MyPostsContainer.jsx","webpack://my-app/./src/components/Profile/Profileinfo/Profileinfo.module.css?e2a6","components/Profile/Profileinfo/ProfileStatusWithHooks.jsx","components/Profile/Profileinfo/Profileinfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js","utils/validators.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"Posts_posts__Oquyn\",\"button\":\"Posts_button__B-fji\",\"inputField\":\"Posts_inputField__6Eyt5\"};","import './Post.css';\r\nimport nullpic from '../../../Assets/Images/nullpic.jpg'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className='postblock'>\r\n            {props.name}\r\n            <img src={nullpic}></img>\r\n            {props.message}\r\n            <span>Like {props.like}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import p from './Posts.module.css';\r\nimport Post from './Post';\r\nimport React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator, minLengthCreator } from '../../../utils/validators';\r\n\r\nconst PostsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field className={p.inputField} name={'newPostText'} component={'input'} placeholder={'Yesterday I was dru...'} validate={[required, maxLengthCreator(50), minLengthCreator(1)]} />\r\n            <button className={p.button}>Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({ form: 'AddPostForm' })(PostsForm);\r\n\r\nconst Posts = React.memo(props => {\r\n    console.log('posts')\r\n    let postsElements = [\r\n        props.posts.reverse().map(p => <Post message={p.text} like={p.like} name={p.name} />)\r\n    ]\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className='posts'>\r\n            <div className={p.posts}>\r\n                <AddPostReduxForm onSubmit={addNewPost} />\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\nexport default Posts;","import Posts from \"./Posts\";\r\nimport { addPostCreator } from \"../../../Redux/profileReducer\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(Posts);\r\n\r\nexport default MyPostsContainer;","// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Profileinfo_profile__gdmNk\",\"storageImg\":\"Profileinfo_storageImg__9Fhik\",\"personinfo\":\"Profileinfo_personinfo__zz10w\",\"avaimg\":\"Profileinfo_avaimg__IpKSe\",\"info\":\"Profileinfo_info__ONXYY\"};","import React, { useEffect, useState } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status]) //[] - у эффекта нет зависимости, отрисуйся один раз, если есть то если есть статус то отрисуйся\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || ' '}</span>\r\n                </div>}\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n                </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import s from './Profileinfo.module.css';\r\nimport Preloader from '../../Common/Preloader/Preloader'\r\nimport nullpic from '../../../Assets/Images/nullpic.jpg'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst Profileinfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div className={s.profile}>\r\n            {/* <img src={props.profile.photos.large} className={s.bigimg}></img> */}\r\n            <div className={s.personinfo}>\r\n                <div className={s.storageImg}>\r\n                    <img src={props.profile.photos.large != null ? props.profile.photos.large : nullpic} className={s.avaimg}></img>\r\n                </div>\r\n                <div className={s.textinfo}>\r\n                    <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n                    <div className={s.info}>{props.profile.fullName}</div>\r\n                    <div className={s.info}>City</div>\r\n                    <div className={s.info}>Y.O</div>\r\n                    <div className={s.info}>{props.profile.contacts.instagram}</div>\r\n                    <div className={s.info}>{props.profile.aboutMe}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profileinfo;","import MyPostsContainer from './Posts/MyPostsContainer';\r\nimport Profileinfo from './Profileinfo/Profileinfo';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <Profileinfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserProfile, getStatus, updateStatus } from \"../../Redux/profileReducer\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport withRouter from \"../withRouter\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.router.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        isAuth: state.auth.isAuth,\r\n        authorizedUserId: state.auth.userId,\r\n    });\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n    withRouter,\r\n    withAuthRedirect,\r\n)(ProfileContainer);","import { Component } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n//HOC HIGH ORDER COMPONENT оборачивает компоненту\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to='/login' />\r\n            return <Component{...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n","export const required = value => {\r\n    if(value) return undefined;\r\n    return \"field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined;\r\n}\r\nexport const minLengthCreator = (minLength) => value => {\r\n    if (value.length < minLength) return `Min length is ${minLength} symbols`\r\n    return undefined;\r\n}\r\n"],"names":["props","className","name","src","nullpic","message","like","AddPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","p","component","placeholder","validate","required","maxLengthCreator","minLengthCreator","React","console","log","postsElements","posts","reverse","map","text","values","addPost","newPostText","connect","state","profilePage","dispatch","addPostCreator","Posts","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","s","photos","large","fullName","contacts","instagram","aboutMe","Preloader","ProfileContainer","userId","this","router","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","isAuth","auth","withRouter","withAuthRedirect","mapStateToPropsForRedirect","Component","RedirectComponent","to","maxLength","length","minLength"],"sourceRoot":""}