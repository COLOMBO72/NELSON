{"version":3,"file":"static/js/189.b59f0874.chunk.js","mappings":"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","sources":["components/Common/FormsControls/FormsControls.js","webpack://my-app/./src/components/Profile/Posts/Posts.module.css?138f","components/Profile/Posts/Post.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/MyPostsContainer.jsx","webpack://my-app/./src/components/Profile/Profileinfo/Profileinfo.module.css?e2a6","components/Profile/Profileinfo/ProfileStatusWithHooks.jsx","components/Profile/Profileinfo/Modal.jsx","components/Profile/Profileinfo/ProfileDataForm.jsx","components/Profile/Profileinfo/Profileinfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js","utils/validators.js","webpack://my-app/./src/components/Common/FormsControls/FormsControls.module.css?8edf","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import React from \"react\"\r\nimport f from '../FormsControls/FormsControls.module.css'\r\nimport { Field } from \"redux-form\";\r\n\r\nconst FormControl = ({ input, meta, child, ...props }) => {\r\n    const showError = meta.touched && meta.error;\r\n    return (\r\n        <div className={f.formControl + \" \" + (showError ? f.error : \"\")}>\r\n            <div>{props.children}</div>\r\n            {showError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\nexport const createField = (placeholder, component, validate, name, props = {}) => (\r\n    <Field className={f.formField}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        component={component}\r\n        validate={validate}\r\n        {...props} />)\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"Posts_posts__Oquyn\",\"button\":\"Posts_button__B-fji\",\"inputField\":\"Posts_inputField__6Eyt5\"};","import './Post.css';\r\nimport nullpic from '../../../Assets/Images/nullpic.jpg'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className='postblock'>\r\n            {props.name}\r\n            <img src={nullpic}></img>\r\n            {props.message}\r\n            <span>Like {props.like}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import p from './Posts.module.css';\r\nimport Post from './Post';\r\nimport React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator, minLengthCreator } from '../../../utils/validators';\r\n\r\nconst PostsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field className={p.inputField} name={'newPostText'} component={'input'} placeholder={'Yesterday I was dru...'} validate={[required, maxLengthCreator(50), minLengthCreator(1)]} />\r\n            <button className={p.button}>Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({ form: 'AddPostForm' })(PostsForm);\r\n\r\nconst Posts = React.memo(props => {\r\n    let postsElements = [\r\n        props.posts.map(p => <Post key={p.id} message={p.text} like={p.like} name={p.name} />)\r\n    ]\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className='posts'>\r\n            <div className={p.posts}>\r\n                <AddPostReduxForm onSubmit={addNewPost} />\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\nexport default Posts;","import Posts from \"./Posts\";\r\nimport { addPostCreator } from \"../../../Redux/profileReducer\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(Posts);\r\n\r\nexport default MyPostsContainer;","// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Profileinfo_profile__gdmNk\",\"personinfo\":\"Profileinfo_personinfo__zz10w\",\"avaimg\":\"Profileinfo_avaimg__IpKSe\",\"info\":\"Profileinfo_info__ONXYY\",\"photosBlock\":\"Profileinfo_photosBlock__ndh7N\"};","import React, { useEffect, useState } from \"react\";\r\nimport s from './Profileinfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status]) //[] - у эффекта нет зависимости, отрисуйся один раз, если есть то если есть статус то отрисуйся\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || ' '}</span>\r\n                </div>}\r\n            {editMode &&\r\n                <div>\r\n                    <input maxLength={30} className={s.inputEditStatus} onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n                </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\"\r\nimport './Modal.css'\r\n\r\nconst ModalContent = (props) => {\r\n    return (\r\n        <div className=\"modal__content\" onClick={e => e.stopPropagation()}>\r\n            {/* <input className=\"modal__input\" type={\"file\"} onChange={props.onChange} /> */}\r\n            <form method=\"post\">\r\n                <label className=\"input-file\" >\r\n                    <input type=\"file\" name=\"file\" onChange={props.onChange} />\r\n                    <span>Выберите файл</span>\r\n                </label>\r\n            </form>\r\n        </div >\r\n    )\r\n}\r\n\r\nconst Modal = ({ active, setActive, onChange }) => {\r\n    return (\r\n        <div>\r\n            <div className={active ? \"modal\" : null} onClick={() => setActive(false)}>\r\n                {active ? <ModalContent onChange={onChange} /> : null}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal;","import s from './Profileinfo.module.css';\r\nimport React from 'react';\r\nimport { Input, Textarea, createField } from '../../Common/FormsControls/FormsControls'\r\nimport { reduxForm } from 'redux-form';\r\nimport styleerror from '../../Common/FormsControls/FormsControls.module.css'\r\n\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n    return (\r\n        <form className={s.textinfo} onSubmit={handleSubmit}>\r\n            <button onClick={() => {}}>save</button>\r\n            {error && <div className={styleerror.form_summary_error}>{error}</div>}\r\n            <div className={s.info}><b>Fullname: </b>{createField(\"Fullname\", Input, [], \"fullName\")}</div>\r\n            <div className={s.info}><b>Looking for a job: </b>{createField(\"\", Input, [], \"lookingForAJob\", {type: \"checkbox\"})}</div>\r\n            <div className={s.info}><b>My professional skills:</b>{createField(\"What I can do?\", Textarea, [], \"lookingForAJobDescription\")}</div>\r\n            <div className={s.info}><b>About me: </b>{createField(\"Who I am?\", Textarea, [], \"aboutMe\")}</div>\r\n            <div className={s.info}><b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return  <div key={key} className={s.contacts}>\r\n                    <b>{key}: {createField(key, Input,[],\"contacts.\" + key)}</b>\r\n                </div>\r\n            })}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import s from './Profileinfo.module.css';\r\nimport Preloader from '../../Common/Preloader/Preloader'\r\nimport nullpic from '../../../Assets/Images/nullpic.jpg'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport Modal from './Modal'\r\nimport { useState } from 'react';\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\nconst Profileinfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n\r\n    const [modalActive, setModalActive] = useState(false)\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        )\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n            setModalActive(false);\r\n        }\r\n    }\r\n    return (\r\n        <div className={s.profile}>\r\n            {/* <img src={props.profile.photos.large} className={s.bigimg}></img> */}\r\n            {isOwner && <Modal active={modalActive} onChange={onMainPhotoSelected} setActive={setModalActive} />}\r\n            <div className={s.personinfo}>\r\n                {/* {props.isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />} */}\r\n                <img src={profile.photos.large != null ? profile.photos.large : nullpic}\r\n                    className={s.avaimg}\r\n                    onClick={() => setModalActive(true)}></img>\r\n\r\n                <div className={s.dataPlaces}>\r\n                    <b>Status:</b> <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n                    {editMode ?\r\n                        <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n                        : <ProfileData isOwner={isOwner} activeEditMode={() => { setEditMode(true) }} profile={profile} />}\r\n                </div>\r\n            </div>\r\n            <div className={s.photosBlock}>\r\n                <h1>Photos</h1>\r\n                <div>\r\n                    photo1\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, activeEditMode }) => {\r\n    return (\r\n        <div className={s.textinfo}>\r\n            {isOwner && <button onClick={activeEditMode}>Edit</button>}\r\n            <div className={s.info}>{profile.fullName}</div>\r\n            <div className={s.info}>{profile.lookingForAJob ? \"yes\" : \"no\"}</div>\r\n            <div className={s.info}>{profile.lookingForAJob &&\r\n                <div>\r\n                    My professional skills: {profile.lookingForAJobDescription}</div>}\r\n            </div>\r\n            <div className={s.info}>{profile.aboutMe}</div>\r\n            <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n                return <Contacts key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n            })}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst Contacts = ({ contactTitle, contactValue }) => {\r\n    return (\r\n        <div>\r\n            <b>{contactTitle}: {contactValue}</b>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profileinfo; ","import MyPostsContainer from './Posts/MyPostsContainer';\r\nimport Profileinfo from './Profileinfo/Profileinfo';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <Profileinfo isOwner={props.isOwner} \r\n            profile={props.profile} status={props.status} \r\n            updateStatus={props.updateStatus} savePhoto={props.savePhoto}\r\n            saveProfile={props.saveProfile}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile} from \"../../Redux/profileReducer\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport withRouter from \"../withRouter\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.router.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.router.params.userId != prevProps.router.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} \r\n            isOwner={!this.props.router.params.userId}\r\n            profile={this.props.profile} \r\n            status={this.props.status} \r\n            updateStatus={this.props.updateStatus} \r\n            savePhoto={this.props.savePhoto}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        isAuth: state.auth.isAuth,\r\n        authorizedUserId: state.auth.userId,\r\n    });\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, saveProfile, getStatus, updateStatus, savePhoto }),\r\n    withRouter,\r\n    withAuthRedirect,\r\n)(ProfileContainer);","import { Component } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n//HOC HIGH ORDER COMPONENT оборачивает компоненту\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to='/login' />\r\n            return <Component{...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n","export const required = value => {\r\n    if(value) return undefined;\r\n    return \"field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined;\r\n}\r\nexport const minLengthCreator = (minLength) => value => {\r\n    if (value.length < minLength) return `Min length is ${minLength} symbols`\r\n    return undefined;\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__CiQtR\",\"error\":\"FormsControls_error__9yZcf\",\"form_summary_error\":\"FormsControls_form_summary_error__h6X3Z\",\"formField\":\"FormsControls_formField__QwbJU\"};","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}"],"names":["FormControl","input","meta","props","child","showError","touched","error","className","f","children","Textarea","restProps","Input","createField","placeholder","component","validate","name","src","nullpic","message","like","AddPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","p","required","maxLengthCreator","minLengthCreator","React","postsElements","posts","map","text","id","values","addPost","newPostText","connect","state","profilePage","dispatch","addPostCreator","Posts","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","maxLength","s","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ModalContent","onClick","stopPropagation","method","type","active","setActive","profile","styleerror","Object","keys","contacts","key","ProfileData","isOwner","activeEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Contacts","contactTitle","contactValue","savePhoto","saveProfile","modalActive","setModalActive","Preloader","target","files","length","photos","large","initialValues","formData","then","ProfileContainer","userId","this","router","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","isAuth","auth","withRouter","withAuthRedirect","mapStateToPropsForRedirect","Component","RedirectComponent","to","minLength","_objectWithoutProperties","source","excluded","i","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}